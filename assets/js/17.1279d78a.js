(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{373:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("本文主要介绍 js 中垃圾回收策略以及谷歌 v8 引擎在垃圾回收上的优化和常见的一些会导致内存泄露操作，希望能对你们有所帮助。")]),t._v(" "),a("h2",{attrs:{id:"什么是垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是垃圾回收"}},[t._v("#")]),t._v(" 什么是垃圾回收")]),t._v(" "),a("p",[a("code",[t._v("GC")]),t._v(" 即 "),a("code",[t._v("Garbage Collection（垃圾回收）")]),t._v(" ，我们的程序在工作过程中会产生很多 "),a("code",[t._v("垃圾")]),t._v("，这些垃圾是程序不用的内存或者是之前用过了，以后不会再用的内存空间，而 "),a("code",[t._v("GC")]),t._v(" 就是负责自动回收这些垃圾，这就是我们常说的 "),a("code",[t._v("垃圾回收机制")]),t._v(" 。")]),t._v(" "),a("p",[t._v("当然也不是所有语言都有 "),a("code",[t._v("GC")]),t._v("，一般的高级语言里面会自带 "),a("code",[t._v("GC")]),t._v("，比如 "),a("code",[t._v("Java、Python、JavaScript")]),t._v(" 等，也有无 "),a("code",[t._v("GC")]),t._v(" 的语言，比如 "),a("code",[t._v("C、C++")]),t._v(" 等，那这种就需要我们程序员手动管理内存了，相对比较麻烦。")]),t._v(" "),a("h2",{attrs:{id:"垃圾是怎么产生的又如何判断垃圾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾是怎么产生的又如何判断垃圾"}},[t._v("#")]),t._v(" 垃圾是怎么产生的又如何判断垃圾")]),t._v(" "),a("p",[t._v("简单来说垃圾就是程序不用的内存或者是之前用过了，以后不会再用的内存空间。")]),t._v(" "),a("blockquote",[a("p",[t._v("如何判断垃圾就是看这个对象能否被访问，那如何知道对象能否被访问？有一个专业的词叫"),a("strong",[t._v("可达性")]),t._v("。根据对象是否可达来判断。可达就不需要被回收，不可达就需要被回收。")])]),t._v(" "),a("p",[t._v("我简单举个例子")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("前面笔者介绍"),a("a",{attrs:{href:"https://juejin.cn/post/7063670330539114503",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 数据类型"),a("OutboundLink")],1),t._v("的时候就说过，在 js 中数据分基本数据类型和引用数据类型，引用数据类型在栈中保存的是引用，实际是存储在堆中的。")]),t._v(" "),a("p",[t._v("在上面的例子中我们首先创建了一个"),a("code",[t._v("test")]),t._v("变量指向对象"),a("code",[t._v("{name: 'randy'}")]),t._v("，然后又把"),a("code",[t._v("test")]),t._v("指向了新的数组"),a("code",[t._v("[1, 2, 3]")]),t._v("，所以之前的"),a("code",[t._v("{name: 'randy'}")]),t._v("就不可能被访问到了(没有了可达性)，就变成了垃圾。")]),t._v(" "),a("h2",{attrs:{id:"为什么要垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要垃圾回收"}},[t._v("#")]),t._v(" 为什么要垃圾回收")]),t._v(" "),a("p",[t._v("从上面的例子可以看出产生了垃圾就会导致浪费内存空间，一个两个还好，多了的话我们的程序可能会越来越卡顿，到最后崩溃。")]),t._v(" "),a("p",[t._v("所以就需要垃圾回收机制来帮我们自动清理没用的垃圾，释放出更多的内存来给当前程序使用，这样程序就会一直流畅的运行下去。")]),t._v(" "),a("h2",{attrs:{id:"垃圾回收策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收策略"}},[t._v("#")]),t._v(" 垃圾回收策略")]),t._v(" "),a("p",[t._v("垃圾回收策略里面最常用的两个策略就是"),a("code",[t._v("标记清除法")]),t._v("和"),a("code",[t._v("引用计数法")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"标记清除法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记清除法"}},[t._v("#")]),t._v(" 标记清除法")]),t._v(" "),a("p",[t._v("标记清除（Mark-Sweep），目前在 "),a("code",[t._v("JavaScript引擎")]),t._v(" 里这种算法是最常用的，到目前为止的大多数浏览器的 "),a("code",[t._v("JavaScript引擎")]),t._v(" 都在采用标记清除算法，只是各大浏览器厂商还对此算法进行了优化加工，且不同浏览器的 "),a("code",[t._v("JavaScript引擎")]),t._v(" 在运行垃圾回收的频率上有所差异。")]),t._v(" "),a("p",[t._v("就像它的名字一样，此算法分为 "),a("code",[t._v("标记")]),t._v(" 和 "),a("code",[t._v("清除")]),t._v(" 两个阶段，标记阶段即为所有活动对象做上标记，清除阶段则把没有标记（也就是非活动对象）销毁。")]),t._v(" "),a("p",[t._v("引擎在使用标记清除算法时，需要从出发点去遍历内存中所有的对象去打标记，而这个出发点有很多，我们称之为一组  "),a("code",[t._v("根")]),t._v("  对象，而所谓的根对象，其实在浏览器环境中包括又不止于  "),a("code",[t._v("全局Window对象")]),t._v("、"),a("code",[t._v("文档DOM树")]),t._v("  等。")]),t._v(" "),a("h4",{attrs:{id:"标记清除过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记清除过程"}},[t._v("#")]),t._v(" 标记清除过程")]),t._v(" "),a("p",[t._v("整个标记清除算法大致过程如下")]),t._v(" "),a("ol",[a("li",[t._v("垃圾收集器在运行时会给内存中的所有变量都加上一个标记。")]),t._v(" "),a("li",[t._v("然后从各个根对象开始遍历，把可达的变量的标记清除掉。")]),t._v(" "),a("li",[t._v("此后，依然有标记的变量就被视为准备删除的变量，清理所有还有标记垃圾，销毁并回收它们所占用的内存空间。")])]),t._v(" "),a("h4",{attrs:{id:"标记清除优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记清除优点"}},[t._v("#")]),t._v(" 标记清除优点")]),t._v(" "),a("p",[t._v("标记清除算法实现比较简单，打标记也无非打与不打两种情况。而且执行效率高。")]),t._v(" "),a("h4",{attrs:{id:"标记清除缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记清除缺点"}},[t._v("#")]),t._v(" 标记清除缺点")]),t._v(" "),a("p",[t._v("标记清除算法在清除之后，剩余的对象内存位置是不变的，也会导致空闲内存空间是不连续的，出现了  "),a("code",[t._v("内存碎片")]),t._v("（如下图），并且由于剩余空闲内存不是一整块，它是由不同大小内存组成的内存列表，这就牵扯出了内存分配的问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/12247ac3d8f249a5ab85b9b40ba1147b~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("假设我们新建对象分配内存时需要大小为  "),a("code",[t._v("size")]),t._v("，由于空闲内存是间断的、不连续的，则需要对空闲内存列表进行一次单向遍历找出大于等于  "),a("code",[t._v("size")]),t._v("  的块才能为其分配（如下图）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb5107f04a3249ce8d37ec7cc5fd9668~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("那如何找到合适的块呢？我们可以采取下面三种分配策略")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("First-fit")]),t._v("，找到大于等于 "),a("code",[t._v("size")]),t._v(" 的块立即返回")]),t._v(" "),a("li",[a("code",[t._v("Best-fit")]),t._v("，遍历整个空闲列表，返回大于等于 "),a("code",[t._v("size")]),t._v(" 的最小分块")]),t._v(" "),a("li",[a("code",[t._v("Worst-fit")]),t._v("，遍历整个空闲列表，找到最大的分块，然后切成两部分，一部分 "),a("code",[t._v("size")]),t._v(" 大小，并将该部分返回")])]),t._v(" "),a("p",[t._v("这三种策略里面 "),a("code",[t._v("Worst-fit")]),t._v(" 的空间利用率看起来是最合理，但实际上切分之后会造成更多的小块，形成内存碎片，所以不推荐使用，对于 "),a("code",[t._v("First-fit")]),t._v(" 和 "),a("code",[t._v("Best-fit")]),t._v(" 来说，考虑到分配的速度和效率 "),a("code",[t._v("First-fit")]),t._v(" 是更为明智的选择")]),t._v(" "),a("p",[t._v("综上所述，标记清除算法或者说策略就有两个很明显的缺点")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("内存碎片化")]),t._v("，空闲内存块是不连续的，容易出现很多空闲内存块，还可能会出现分配所需内存过大的对象时找不到合适的块。")]),t._v(" "),a("li",[a("strong",[t._v("分配速度慢")]),t._v("，因为即便是使用 "),a("code",[t._v("First-fit")]),t._v(" 策略，其操作仍是一个 "),a("code",[t._v("O(n)")]),t._v(" 的操作，最坏情况是每次都要遍历到最后，同时因为碎片化，大对象的分配效率会更慢。")])]),t._v(" "),a("h3",{attrs:{id:"引用计数法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用计数法"}},[t._v("#")]),t._v(" 引用计数法")]),t._v(" "),a("p",[t._v("引用计数（Reference Counting），这其实是早先的一种垃圾回收算法，它把 "),a("code",[t._v("对象是否不再需要")]),t._v(" 简化定义为 "),a("code",[t._v("对象有没有其他对象引用到它")]),t._v("，如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收，目前很少使用这种算法了，因为它的问题很多。")]),t._v(" "),a("h4",{attrs:{id:"引用计数法过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用计数法过程"}},[t._v("#")]),t._v(" 引用计数法过程")]),t._v(" "),a("p",[t._v("引用计数就是跟踪记录每个值被引用的次数。当声明了一个变量并将一个引用类型值赋给该变量时，则这个值的引用次数就是 1。")]),t._v(" "),a("p",[t._v("如果同一个值又被赋给另一个变量，则该值的引用次数加 1。相反，如果包含对这个值引用的变量改变了引用对象，则该值引用次数减 1。")]),t._v(" "),a("p",[t._v("当这个值的引用次数变成 0 时，则说明没有办法再访问这个值了，因而就可以将其占用的内存空间回收回来。")]),t._v(" "),a("p",[t._v("这样，当垃圾收集器下次再运行时，它就会释放那些引用次数为 0 的值所占用的内存。")]),t._v(" "),a("p",[t._v("下面看个例子")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//count==1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//count==2")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//count==1")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//count==0 被清除")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"引用计数法优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用计数法优点"}},[t._v("#")]),t._v(" 引用计数法优点")]),t._v(" "),a("p",[t._v("引用计数在引用值为 0 时，也就是在变成垃圾的那一刻就会被回收，所以它可以立即回收垃圾。而标记清除算法需要每隔一段时间进行一次，在应用程序运行过程中线程就必须要暂停去执行一次 "),a("code",[t._v("GC")]),t._v("。")]),t._v(" "),a("p",[t._v("另外，标记清除算法需要遍历堆里的活动以及非活动对象来清除，而引用计数则只需要在引用时计数值为 0 的时候清除就可以了。")]),t._v(" "),a("h4",{attrs:{id:"引用计数法缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用计数法缺点"}},[t._v("#")]),t._v(" 引用计数法缺点")]),t._v(" "),a("p",[t._v("首先每个引用变量它都需要一个计数器，因此计数器需要占很大的位置。")]),t._v(" "),a("p",[t._v("还有就是无法解决循环引用无法回收的问题。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("上面代码中"),a("code",[t._v("cycle")]),t._v("函数执行完后不需要了，所以"),a("code",[t._v("o1")]),t._v("和"),a("code",[t._v("o2")]),t._v("的内存应该被释放，但是他们互相引用导致内存不会被回收，这就是循环引用。")]),t._v(" "),a("h2",{attrs:{id:"v8-引擎的垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8-引擎的垃圾回收"}},[t._v("#")]),t._v(" v8 引擎的垃圾回收")]),t._v(" "),a("p",[t._v("v8 引擎对垃圾回收做了更近一步的优化。使用分代式垃圾回收机制，把对象分为新生代和老生代两种类型。对这两部分采用不同的垃圾回收策略。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/abae5b06648a40d2aaa453b5d8a83939~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("新生代中的对象为存活时间较短的对象，老生代中的对象为存活时间较长或常驻内存的对象。")]),t._v(" "),a("h3",{attrs:{id:"分代内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分代内存"}},[t._v("#")]),t._v(" 分代内存")]),t._v(" "),a("p",[t._v("默认情况下，32 位系统新生代内存大小为 16MB，老生代内存大小为 700MB，64 位系统下，新生代内存大小为 32MB，老生代内存大小为 1.4GB。")]),t._v(" "),a("p",[t._v("新生代平均分成两块相等的内存空间，叫做"),a("code",[t._v("semispace")]),t._v("，每块内存大小 8MB（32 位）或 16MB（64 位）。")]),t._v(" "),a("h3",{attrs:{id:"新生代垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新生代垃圾回收"}},[t._v("#")]),t._v(" 新生代垃圾回收")]),t._v(" "),a("p",[t._v("新生代对象是通过一个名为  "),a("code",[t._v("Scavenge")]),t._v("  的算法进行垃圾回收，在  "),a("code",[t._v("Scavenge算法")]),t._v("  的具体实现中，主要采用了一种复制式的方法即  "),a("code",[t._v("Cheney算法")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Cheney算法")]),t._v("将堆内存一分为二，一个是处于使用状态的空间我们暂且称之为  "),a("code",[t._v("使用区")]),t._v("，一个是处于闲置状态的空间我们称之为  "),a("code",[t._v("空闲区")]),t._v("。")]),t._v(" "),a("p",[t._v("新加入的对象最开始都会存放到使用区，当使用区快被写满时，就需要执行一次垃圾清理操作。")]),t._v(" "),a("p",[t._v("当开始进行垃圾回收时，新生代垃圾回收器会对使用区中的活动对象做标记，标记完成之后将使用区的活动对象复制进空闲区并进行排序，随后进入垃圾清理阶段，即将非活动对象占用的空间清理掉。最后进行角色互换，把原来的使用区变成空闲区，把原来的空闲区变成使用区。")]),t._v(" "),a("blockquote",[a("p",[t._v("为什么要把使用区和空闲区进行对调呢？就是为了让新加入的对象最开始都存放到使用区，空闲区始终保持空闲的状态。")])]),t._v(" "),a("p",[t._v("因为新生代中对象的生命周期较短，并且"),a("code",[t._v("Scavenge")]),t._v("由于只复制存活的对象，所以它在时间效率上有优异的体现。\n由于"),a("code",[t._v("Scavenge")]),t._v("将堆内存一分为二，所以永远最多使用一半的内存，所以内存利用率不高。")]),t._v(" "),a("h3",{attrs:{id:"晋升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#晋升"}},[t._v("#")]),t._v(" 晋升")]),t._v(" "),a("p",[t._v("对象从新生代移动到老生代的过程叫作晋升。")]),t._v(" "),a("p",[t._v("对象晋升的条件主要有两个：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("对象从使用区复制到空闲区时，会检查它的内存地址来判断这个对象是否已经经历过一次"),a("code",[t._v("Scavenge")]),t._v("回收。如果已经经历过了，则会将该对象从使用区直接移动到老生代中，如果没有，则复制到空闲区。"),a("strong",[t._v("总结来说，如果一个对象是第二次经历从使用区复制到空闲区，那么这个对象会被直接移动到老生代中")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("当要从使用区复制一个对象到空闲区时，如果空闲区已经使用了超过"),a("code",[t._v("25%")]),t._v("，则这个对象会直接晋升到老生代中。设置"),a("code",[t._v("25%")]),t._v("这个阈值的原因是当这次"),a("code",[t._v("Scavenge")]),t._v("回收完成后，这个空闲区会变为使用区，接下来的内存分配将在这个空间中进行。如果占比过高，会影响后续的内存分配。")])])]),t._v(" "),a("h3",{attrs:{id:"老生代垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#老生代垃圾回收"}},[t._v("#")]),t._v(" 老生代垃圾回收")]),t._v(" "),a("p",[t._v("在老生代中，存活对象占较大比重，如果继续采用"),a("code",[t._v("Scavenge")]),t._v("算法进行管理，就会存在两个问题：")]),t._v(" "),a("ol",[a("li",[t._v("由于存活对象较多，复制存活对象的效率会很低。")]),t._v(" "),a("li",[t._v("采用"),a("code",[t._v("Scavenge")]),t._v("算法会浪费一半内存，由于老生代所占堆内存远大于新生代，所以浪费会很严重。")])]),t._v(" "),a("p",[t._v("所以，V8 在老生代中主要采用了"),a("strong",[t._v("Mark-Sweep")]),t._v("和"),a("strong",[t._v("Mark-Compact")]),t._v("相结合的方式进行垃圾回收。")]),t._v(" "),a("p",[a("code",[t._v("Mark-Sweep")]),t._v("是标记清除的意思，就是我们前面介绍的标记清除垃圾回收。前面我们说到标记清除会有"),a("code",[t._v("内存碎片化")]),t._v("和"),a("code",[t._v("分配速度慢")]),t._v("问题。所以就有了下面的"),a("code",[t._v("Mark-Compact")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Mark-Compact")]),t._v("就是标记整理的意思。标记整理算法会将活着的对象（即不需要清理的对象）向内存的一端移动，这样存活的对象在内存空间中是连续的，就不会再有内存碎片这种问题了。")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("v8 引擎中的分代式机制把一些新、小、存活时间短的对象作为新生代，采用"),a("code",[t._v("Scavenge")]),t._v(" 算法进行快速清理，而一些大、老、存活时间长的对象作为老生代，采用了"),a("code",[t._v("Mark-Sweep")]),t._v("和"),a("code",[t._v("Mark-Compact")]),t._v("相结合的方式进行垃圾回收，可以说此机制大大提高了垃圾回收机制的效率。")]),t._v(" "),a("h2",{attrs:{id:"内存泄露"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露"}},[t._v("#")]),t._v(" 内存泄露")]),t._v(" "),a("p",[t._v("虽然引擎有优化，但并不是说我们就可以完全不用关心垃圾回收这块了，我们的代码中依然要主动避免一些不利于引擎做垃圾回收操作，因为不是所有无用对象内存都可以被垃圾回收机制回收的，那当不再用到的内存，没有及时回收时，我们叫它  "),a("code",[t._v("内存泄漏")]),t._v("。")]),t._v(" "),a("p",[t._v("下面我们来说说常见的内存泄露情况。")]),t._v(" "),a("h3",{attrs:{id:"不正当的闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不正当的闭包"}},[t._v("#")]),t._v(" 不正当的闭包")]),t._v(" "),a("p",[t._v("闭包在不同的文献中有不同的定义，笔者理解的闭包是在一个函数中返回了另外一个新函数，这个新函数使用了外部函数的局部变量。")]),t._v(" "),a("p",[t._v("举个例子")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newSay "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newSay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("上面的"),a("code",[t._v("say")]),t._v("方法返回了一个新的函数，这个函数使用了外部函数的局部变量"),a("code",[t._v("name")]),t._v("，所以就产生了闭包。这里的"),a("code",[t._v("name")]),t._v("变量内存就不会被释放，就会导致内存泄露。")]),t._v(" "),a("p",[t._v("那怎么解决呢？")]),t._v(" "),a("p",[t._v("我们只需要在调用完毕该方法后把变量置为"),a("code",[t._v("null")]),t._v("就可以啦。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("newSay "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"意外的全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#意外的全局变量"}},[t._v("#")]),t._v(" 意外的全局变量")]),t._v(" "),a("p",[t._v("函数中的局部变量在函数执行结束后这些变量已经不再被需要，所以垃圾回收器会识别并释放它们。但是对于全局变量，垃圾回收器很难判断这些变量什么时候才不被需要，所以全局变量通常不会被回收，我们使用全局变量是没问题的，但同时我们要避免一些额外的全局变量产生。")]),t._v(" "),a("p",[t._v("我们再来看看下面的例子")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有声明从而制造了隐式全局变量test1")]),t._v("\n  test1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数内部this指向window，制造了隐式全局变量test2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"游离-dom-引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#游离-dom-引用"}},[t._v("#")]),t._v(" 游离 DOM 引用")]),t._v(" "),a("p",[t._v("我们在平时的开发中进行 "),a("code",[t._v("DOM")]),t._v(" 操作时会使用变量缓存 "),a("code",[t._v("DOM")]),t._v(" 节点的引用，但移除节点的时候，我们应该同步释放缓存的引用，否则游离的子树无法释放。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#root"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" div1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#div1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nroot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("一定要将"),a("code",[t._v("DOM")]),t._v("变量置为"),a("code",[t._v("null")]),t._v("，这样才会被垃圾回收机制回收。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("div1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"未清理的定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未清理的定时器"}},[t._v("#")]),t._v(" 未清理的定时器")]),t._v(" "),a("p",[t._v("在我们平时的开发中可能会使用到"),a("code",[t._v("setTimeout")]),t._v("  和  "),a("code",[t._v("setInterval")]),t._v("，但是在每次使用完毕后你们有没有将定时器清除呢？如果没有清除的话也会造成内存泄漏。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" inter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("在使用完毕后我们一定要将其清除")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("说到这里对于浏览器中的  "),a("code",[t._v("requestAnimationFrame")]),t._v("  也存在这个问题，我们需要在不需要的时候用  "),a("code",[t._v("cancelAnimationFrame")]),t._v("  来取消使用。")]),t._v(" "),a("h3",{attrs:{id:"未清理的事件监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未清理的事件监听器"}},[t._v("#")]),t._v(" 未清理的事件监听器")]),t._v(" "),a("p",[t._v("在我们平时的开发中可能会使用到"),a("code",[t._v("addEventListener")]),t._v("来进行事件的监听，但是监听完毕后有没有使用"),a("code",[t._v("removeEventListener")]),t._v("进行清除呢。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"randy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resize"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" say"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("一定要记得在使用完毕后使用"),a("code",[t._v("removeEventListener")]),t._v("进行清除。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resize"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" say"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在"),a("code",[t._v("vue")]),t._v("中还有我们常使用的"),a("code",[t._v("eventBus")]),t._v("进行事件传播。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("eventBus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"say"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" say"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("我们一定要记得"),a("code",[t._v("off")]),t._v("方法进行清除。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("eventBus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("off")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"say"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" say"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"未清理的-console"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未清理的-console"}},[t._v("#")]),t._v(" 未清理的 console")]),t._v(" "),a("p",[t._v("什么"),a("code",[t._v("console")]),t._v("也会造成内存泄露？")]),t._v(" "),a("p",[t._v("我们之所以在控制台能看到数据输出，是因为浏览器保存了我们输出对象的信息数据引用，也正是因此未清理的  "),a("code",[t._v("console")]),t._v("  如果输出了对象也会造成内存泄漏。")]),t._v(" "),a("p",[t._v("所以在上到生产环境的时候我们一般都会使用"),a("a",{attrs:{href:"https://github.com/Riokai/babel-plugin-transform-remove-console",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件"),a("OutboundLink")],1),t._v("把"),a("code",[t._v("console")]),t._v("进行清除。")]),t._v(" "),a("h3",{attrs:{id:"未清理的-map-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未清理的-map-set"}},[t._v("#")]),t._v(" 未清理的 Map Set")]),t._v(" "),a("p",[t._v("由于"),a("code",[t._v("ES")]),t._v("普及，我们可能会用得到"),a("code",[t._v("ES6")]),t._v("的"),a("code",[t._v("Map")]),t._v("和"),a("code",[t._v("Set")]),t._v("。"),a("code",[t._v("Map")]),t._v("和"),a("code",[t._v("Set")]),t._v("和"),a("code",[t._v("Object")]),t._v("一样都是强引用，也就是如果对象保存在"),a("code",[t._v("Map")]),t._v("和"),a("code",[t._v("Set")]),t._v("中是不会被垃圾回收机制回收的。")]),t._v(" "),a("p",[t._v("所以就有了"),a("code",[t._v("WeakSet")]),t._v("和"),a("code",[t._v("WeakMap")]),t._v("，保存这两个对象里对象是弱引用，一个对象若只被弱引用所引用，则被认为是不可访问（或弱可访问）的，因此可能在任何时刻被回收，不会干扰垃圾回收机制的进行。")]),t._v(" "),a("p",[t._v("简单来说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 "),a("code",[t._v("WeakSet")]),t._v("或"),a("code",[t._v("WeakMap")]),t._v(" 之中。")]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6981588276356317214",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解垃圾回收机制吗"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903591510016007",target:"_blank",rel:"noopener noreferrer"}},[t._v("聊聊 V8 引擎的垃圾回收"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6984188410659340324",target:"_blank",rel:"noopener noreferrer"}},[t._v("你的程序中可能存在内存泄漏"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"后记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[t._v("#")]),t._v(" 后记")]),t._v(" "),a("p",[t._v("本文为笔者个人学习笔记，如有谬误，还请告知，万分感谢！如果本文对你有所帮助，还请点个关注点个赞~，您的支持是笔者不断更新的动力。")])])}),[],!1,null,null,null);s.default=e.exports}}]);