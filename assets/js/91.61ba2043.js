(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{447:function(t,s,_){"use strict";_.r(s);var v=_(44),a=Object(v.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),_("p",[t._v("https 是安全的 http 协议")]),t._v(" "),_("h2",{attrs:{id:"https-为什么让数据传输更安全"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https-为什么让数据传输更安全"}},[t._v("#")]),t._v(" HTTPS 为什么让数据传输更安全？")]),t._v(" "),_("p",[t._v("谈到 HTTPS, 就不得不谈到与之相对的 HTTP。HTTP 的特性是明文传输，因此在传输的每一个环节，数据都有可能被第三方窃取或者篡改，具体来说，HTTP 数据经过 TCP 层，然后经过 WIFI 路由器、运营商和目标服务器，这些环节中都可能被中间人拿到数据并进行篡改，也就是我们常说的中间人攻击。\n为了防范这样一类攻击，我们不得已要引入新的加密方案，即 HTTPS。\nHTTPS 并不是一个新的协议, 而是一个加强版的 HTTP。其原理是在 HTTP 和 TCP 之间建立了一个中间层，当 HTTP 和 TCP 通信时并不是像以前那样直接通信，直接经过了一个中间层（TLS、SSL）进行加密，将加密后的数据包传给 TCP, 响应的，TCP 必须将数据包解密，才能传给上面的 HTTP。这个中间层也叫安全层。安全层的核心就是对数据加解密。")]),t._v(" "),_("h2",{attrs:{id:"加密方式有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加密方式有哪些"}},[t._v("#")]),t._v(" 加密方式有哪些？")]),t._v(" "),_("ul",[_("li",[t._v("对称加密 加密解密使用同一把密钥 传输密钥不太安全")]),t._v(" "),_("li",[t._v("非对称加密 公钥是公开的使用公钥加密 私钥只有自己知道使用私钥解密(SSL)")])]),t._v(" "),_("h2",{attrs:{id:"什么是-tls、ssl"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是-tls、ssl"}},[t._v("#")]),t._v(" 什么是 TLS、SSL")]),t._v(" "),_("p",[t._v("通俗的讲，TLS、SSL 其实是类似的东西，SSL 是个加密套件，负责对 HTTP 的数据进行加密。TLS 是 SSL 的升级版。现在提到 HTTPS，加密套件基本指的是 TLS。")]),t._v(" "),_("h2",{attrs:{id:"tls、ssl-握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tls、ssl-握手"}},[t._v("#")]),t._v(" TLS、SSL 握手")]),t._v(" "),_("ol",[_("li",[t._v("浏览器向服务器发送 client_random 和加密方法列表。")]),t._v(" "),_("li",[t._v("服务器接收到，返回 server_random、加密方法以及公钥。")]),t._v(" "),_("li",[t._v("浏览器接收，接着生成另一个随机数 pre_random, 并且用公钥加密，传给服务器。(敲黑板！重点操作！)")]),t._v(" "),_("li",[t._v("服务器用私钥解密这个被加密后的 pre_random。")]),t._v(" "),_("li",[t._v("现在浏览器和服务器有三样相同的凭证:client_random、server_random 和 pre_random。然后两者用相同的加密方法混合这三个随机数，生成最终的密钥。然后浏览器服务器使用该秘钥进行对称加密传输。")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080a6f6375dc1~tplv-t2oaga2asx-image.image",alt:"image"}})]),t._v(" "),_("h2",{attrs:{id:"添加数字证书"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#添加数字证书"}},[t._v("#")]),t._v(" 添加数字证书")]),t._v(" "),_("p",[t._v("尽管通过两者加密方式的结合，能够很好地实现加密传输，但实际上还是存在一些问题。黑客如果采用 DNS 劫持，将目标地址替换成黑客服务器的地址，然后黑客自己造一份公钥和私钥，照样能进行数据传输。而对于浏览器用户而言，他是不知道自己正在访问一个危险的服务器的。\n事实上 HTTPS 在上述结合对称和非对称加密的基础上，又添加了数字证书认证的步骤。其目的就是让服务器证明自己的身份。")]),t._v(" "),_("h2",{attrs:{id:"什么是数字证书"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是数字证书"}},[t._v("#")]),t._v(" 什么是数字证书？")]),t._v(" "),_("p",[t._v("数字证书是可信任组织颁发给特定对象的认证。")]),t._v(" "),_("p",[t._v("为了获取这个证书，服务器运营者需要向第三方认证机构获取授权，这个第三方机构也叫 CA(Certificate Authority), 认证通过后 CA 会给服务器颁发数字证书。")]),t._v(" "),_("p",[t._v("这个数字证书有两个作用:")]),t._v(" "),_("ol",[_("li",[t._v("服务器向浏览器证明自己的身份。")]),t._v(" "),_("li",[t._v("把公钥传给浏览器。")])]),t._v(" "),_("h2",{attrs:{id:"怎么验证证书的有效性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#怎么验证证书的有效性"}},[t._v("#")]),t._v(" 怎么验证证书的有效性")]),t._v(" "),_("ol",[_("li",[t._v("服务器把证书发送过来，证书上有一些基本信息和一个签名，签名的内容是指纹算法和指纹内容，指纹内容是基本信息通过指纹算法计算出来的 hash 值。签名是证书机构通过私钥加密的。")]),t._v(" "),_("li",[t._v("客户端寻找内置证书，判断服务器发来的证书是否在自己内置的证书列表，找到了就使用内置证书的公钥解密签名得到指纹内容和指纹算法，然后使用指纹算法加密基本信息得到 hash（指纹内容），拿这两个 hash 对比判断是否一致，一致就通过。")])]),t._v(" "),_("h2",{attrs:{id:"https-保证安全传输的原因"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https-保证安全传输的原因"}},[t._v("#")]),t._v(" https 保证安全传输的原因")]),t._v(" "),_("ol",[_("li",[t._v("TCP 的三次握手，在 443 端口建立连接")]),t._v(" "),_("li",[t._v("SSL 握手（比 http 多的这一步）")]),t._v(" "),_("li",[t._v("数据传输")])]),t._v(" "),_("p",[t._v("总结")]),t._v(" "),_("ul",[_("li",[t._v("https 是使用了非对称加密和对称加密相结合的方式。")]),t._v(" "),_("li",[t._v("https 并不是直接通过非对称加密传输过程，而是有握手过程，握手过程主要是和服务器做通讯，通过非对称加密的方式生成对称的私有秘钥，最后通过该秘钥对称加密传输数据。")]),t._v(" "),_("li",[t._v("使用了证书，证书验证过程保证了对方是合法的，并且中间人无法通过伪造证书方式进行攻击。")])]),t._v(" "),_("h2",{attrs:{id:"http-和-https-异同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-和-https-异同"}},[t._v("#")]),t._v(" http 和 https 异同？")]),t._v(" "),_("ol",[_("li",[t._v("http")])]),t._v(" "),_("ul",[_("li",[t._v("http 使用明文 内容可能会被窃听")]),t._v(" "),_("li",[t._v("http 不验证通信方的身份 可能会被伪装")]),t._v(" "),_("li",[t._v("http 无法证明报文的完整性 可能会被篡改")]),t._v(" "),_("li",[t._v("http 端口是 80")]),t._v(" "),_("li",[t._v("http 与 tcp 进行通信，而 https 与 ssl 或者 tls 层通信")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("https")])]),t._v(" "),_("ul",[_("li",[t._v("https 端口是 443")]),t._v(" "),_("li",[t._v("https 多了证书这一概念")]),t._v(" "),_("li",[t._v("https 不是新的协议 是身披 ssl/tls 协议外壳的 http")]),t._v(" "),_("li",[t._v("HTTP 协议运行在 TCP 之上，所有传输的内容都是明文，HTTPS 运行在 SSL/TLS 之上，SSL/TLS 运行在 TCP 之上，所有传输的内容都经过加密的。")]),t._v(" "),_("li",[t._v("https 采用对称加密和非对称加密两者并用的加密方式")])])])}),[],!1,null,null,null);s.default=a.exports}}]);