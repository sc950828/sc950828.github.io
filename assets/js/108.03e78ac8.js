(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{463:function(_,v,a){"use strict";a.r(v);var t=a(44),r=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"什么是计算机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是计算机网络"}},[_._v("#")]),_._v(" 什么是计算机网络")]),_._v(" "),a("p",[_._v("计算机网络主要是由一些通用的、可编程的硬件互连而成，通过这些硬件，可以传送不同类型的数据，并且可以支持广泛和日益增长的应用。")]),_._v(" "),a("h2",{attrs:{id:"分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[_._v("#")]),_._v(" 分类")]),_._v(" "),a("h3",{attrs:{id:"按作用范围分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按作用范围分"}},[_._v("#")]),_._v(" 按作用范围分")]),_._v(" "),a("ol",[a("li",[_._v("广域网（WAN）")]),_._v(" "),a("li",[_._v("城域网（MAN）")]),_._v(" "),a("li",[_._v("局域网（LAN）")])]),_._v(" "),a("h3",{attrs:{id:"按使用者分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按使用者分"}},[_._v("#")]),_._v(" 按使用者分")]),_._v(" "),a("ol",[a("li",[_._v("公用网络")]),_._v(" "),a("li",[_._v("专用网络")])]),_._v(" "),a("h2",{attrs:{id:"osi-七层模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#osi-七层模型"}},[_._v("#")]),_._v(" OSI 七层模型")]),_._v(" "),a("ol",[a("li",[_._v("应用层 为计算机用户提供接口和服务")]),_._v(" "),a("li",[_._v("表示层 数据处理（编码解码、加密解密）")]),_._v(" "),a("li",[_._v("会话层 管理（建立、维护、重连）通信会话")]),_._v(" "),a("li",[_._v("传输层 管理端到端的通信连接")]),_._v(" "),a("li",[_._v("网络层 数据路由（决定数据在网络的路径）")]),_._v(" "),a("li",[_._v("数据链路层 管理相邻节点之间的数据通信")]),_._v(" "),a("li",[_._v("物理层 数据通信的光电物理特性")])]),_._v(" "),a("h2",{attrs:{id:"tcp-ip-四层模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-四层模型"}},[_._v("#")]),_._v(" TCP/IP 四层模型")]),_._v(" "),a("ol",[a("li",[_._v("应用层 （对应 OSI 的应用层、表示层、会话层） HTTP FTP SMTP POP3")]),_._v(" "),a("li",[_._v("传输层 （对应 OSI 的传输层） TCP/UDP")]),_._v(" "),a("li",[_._v("网络层 （对应 OSI 的网络层） IP")]),_._v(" "),a("li",[_._v("网络接口层 （对应 OSI 的数据链路层、物理层）")])]),_._v(" "),a("h2",{attrs:{id:"物理层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理层"}},[_._v("#")]),_._v(" 物理层")]),_._v(" "),a("h3",{attrs:{id:"物理层作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理层作用"}},[_._v("#")]),_._v(" 物理层作用")]),_._v(" "),a("ol",[a("li",[_._v("连接不同的物理设备")]),_._v(" "),a("li",[_._v("传输比特流 在这一层，数据的单位称为比特（bit）。")])]),_._v(" "),a("h3",{attrs:{id:"信道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信道"}},[_._v("#")]),_._v(" 信道")]),_._v(" "),a("p",[_._v("信道是往一个方向传送信息的媒体")]),_._v(" "),a("p",[_._v("一条通信电路包含一个接受信道和一个发送信道")]),_._v(" "),a("h4",{attrs:{id:"信道分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信道分类"}},[_._v("#")]),_._v(" 信道分类")]),_._v(" "),a("ol",[a("li",[_._v("单工通信信道。只能往一个方向通信，没有反方向反馈的信道。比如电视、收音机")]),_._v(" "),a("li",[_._v("半双工通信信道。双方都可以发送和接收信息，但是双方不能同时发送，也不能同时接收。")]),_._v(" "),a("li",[_._v("全双工通信信道。双方都可以发送和接收信息，并且双方可以同时发送，也可以同时接收。")])]),_._v(" "),a("h2",{attrs:{id:"数据链路层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据链路层"}},[_._v("#")]),_._v(" 数据链路层")]),_._v(" "),a("h3",{attrs:{id:"_1、封装成帧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、封装成帧"}},[_._v("#")]),_._v(" 1、封装成帧")]),_._v(" "),a("p",[_._v("帧是数据链路层数据的基本单位")]),_._v(" "),a("p",[_._v("发送端在网络层的一段数据前后添加特定标记形成帧。")]),_._v(" "),a("p",[_._v("接收端根据前后特定标记识别出帧")]),_._v(" "),a("h4",{attrs:{id:"帧的组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帧的组成"}},[_._v("#")]),_._v(" 帧的组成")]),_._v(" "),a("p",[_._v("帧首部 + 帧数据 + 帧尾部")]),_._v(" "),a("p",[_._v("帧首部（SOH:00000001）")]),_._v(" "),a("p",[_._v("帧尾部（EOT:00000100）")]),_._v(" "),a("h4",{attrs:{id:"最大传输单元-mtu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大传输单元-mtu"}},[_._v("#")]),_._v(" 最大传输单元 MTU")]),_._v(" "),a("p",[_._v("数据链路层的数据帧不是无限大的")]),_._v(" "),a("p",[_._v("数据帧过大或过小都会影响传输的效率")]),_._v(" "),a("p",[_._v("以太网 MTU 一般为 1500 字节")]),_._v(" "),a("p",[_._v("路径 MTU 由链路中 MTU 的最小值决定")]),_._v(" "),a("h3",{attrs:{id:"_2、透明传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、透明传输"}},[_._v("#")]),_._v(" 2、透明传输")]),_._v(" "),a("p",[_._v("控制字符在帧数据中，但是我们要当做不存在处理")]),_._v(" "),a("h4",{attrs:{id:"帧数据里面恰好有帧首部或帧尾部标记怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帧数据里面恰好有帧首部或帧尾部标记怎么办"}},[_._v("#")]),_._v(" 帧数据里面恰好有帧首部或帧尾部标记怎么办？")]),_._v(" "),a("p",[_._v("在控制字符前添加 ESC 转义字符。")]),_._v(" "),a("p",[_._v("如果需要传输 ESC 转义字符，我们只需要使用 ESC 转义 ESC。类似\\")]),_._v(" "),a("h3",{attrs:{id:"_3、差错监测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、差错监测"}},[_._v("#")]),_._v(" 3、差错监测")]),_._v(" "),a("p",[_._v("物理层只管传输比特流，无法控制是否出错")]),_._v(" "),a("p",[_._v("数据链路层负责起检错监测的工作")]),_._v(" "),a("p",[_._v("数据链路层只负责数据的检测不进行纠正")]),_._v(" "),a("h4",{attrs:{id:"差错监测的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#差错监测的方法"}},[_._v("#")]),_._v(" 差错监测的方法")]),_._v(" "),a("ol",[a("li",[_._v("奇偶检验码")])]),_._v(" "),a("p",[_._v("在比特流尾部添加一位校验位。")]),_._v(" "),a("ul",[a("li",[_._v("比特流 00110010 1+1+1 = 3 是奇数所以在尾部添加 1")]),_._v(" "),a("li",[_._v("比特流 01110010 1+1+1+1 = 4 是偶数所以在尾部添加 0")])]),_._v(" "),a("p",[_._v("这种局限性很明显，当出现两位一起变化的话监测不出来。")]),_._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[_._v("循环冗余校验码 CRC")])]),_._v(" "),a("p",[_._v("一种根据传输或保存的数据而产生固定位数校验码的方法")]),_._v(" "),a("p",[_._v("检测数据传输或者保存后可能出现的错误")]),_._v(" "),a("p",[_._v("生成的数字计算出来并且附加到数据后面")]),_._v(" "),a("h4",{attrs:{id:"mac-地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac-地址"}},[_._v("#")]),_._v(" MAC 地址")]),_._v(" "),a("p",[_._v("把一台计算机的数据通过物理层和数据链路层发送给另外一台计算机，怎么标识对方以及怎么知道对方的地址呢？")]),_._v(" "),a("p",[_._v("唯一标示 MAC 地址 出现了。进入网络的每一台计算机，都会有网卡接口，每一个网卡都会有一个唯一的地址，就是所谓的 MAC 地址。MAC 地址共有 48 位，6 个字节。使用十六进制表示。")]),_._v(" "),a("p",[_._v("比如 30-B4-9E-ED-85-CA")]),_._v(" "),a("h4",{attrs:{id:"以太网协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以太网协议"}},[_._v("#")]),_._v(" 以太网协议")]),_._v(" "),a("p",[_._v("以太网是一种使用广泛的局域网技术")]),_._v(" "),a("p",[_._v("以太网是一种应用于数据链路层的协议")]),_._v(" "),a("p",[_._v("使用以太网可以完成相邻设备的数据帧传输")]),_._v(" "),a("table",[a("tr",[a("th",[_._v("目的地址")]),_._v(" "),a("th",[_._v("源地址")]),_._v(" "),a("th",[_._v("类型")]),_._v(" "),a("th",[_._v("帧数据")]),_._v(" "),a("th",[_._v("CRC")])]),_._v(" "),a("tr",[a("td",[_._v("6")]),_._v(" "),a("td",[_._v("6")]),_._v(" "),a("td",[_._v("2")]),_._v(" "),a("td",[_._v("46~1500")]),_._v(" "),a("td",[_._v("4")])])]),_._v(" "),a("h4",{attrs:{id:"广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播"}},[_._v("#")]),_._v(" 广播")]),_._v(" "),a("p",[_._v("如果 计算机 A 知道 计算机 B 的 MAC 地址就能直接传送数据了但是如果计算机 A 不知道计算机 B 的 MAC 地址呢？")]),_._v(" "),a("p",[_._v("所以为了解决这个问题，广播 这个概念就出现了。在同一子网络，就是我们常说的局域网中，计算机通过广播来通信，即向同子网中全部计算机发送数据包，其它计算机根据数据包中接收者的 MAC 地址 来判断是否接收数据包。会取出数据包中的 MAC 地址 与自身的 MAC 地址 对比，如相同就接收这个数据包，否则就丢弃这个数据包 ( 丢包 )，这种方式我们称之为 广播。")]),_._v(" "),a("h2",{attrs:{id:"网络层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[_._v("#")]),_._v(" 网络层")]),_._v(" "),a("p",[_._v("在这一层数据的单位被称为数据包。")]),_._v(" "),a("h3",{attrs:{id:"虚拟互连网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟互连网络"}},[_._v("#")]),_._v(" 虚拟互连网络")]),_._v(" "),a("p",[_._v("实际的计算机网络是错综复杂的")]),_._v(" "),a("p",[_._v("物理设备通过使用 IP 协议，屏蔽了物理网络之间的差异")]),_._v(" "),a("p",[_._v("当网络中的主机使用 IP 协议连接时，则无需关注网络细节")]),_._v(" "),a("h3",{attrs:{id:"ip-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-协议"}},[_._v("#")]),_._v(" ip 协议")]),_._v(" "),a("p",[_._v("IP 协议使得复杂的实际网络变为一个虚拟互连的网络")]),_._v(" "),a("p",[_._v("Ip 协议使得网络层可以屏蔽底层细节而专注网络层的数据转发")]),_._v(" "),a("p",[_._v("IP 协议解决了在虚拟网络中数据报传输路径的问题")]),_._v(" "),a("p",[_._v("IP 地址长度为 32 位，常分成 4 个 8 位，即 4 个字节。")]),_._v(" "),a("p",[_._v("ip 地址常使用点分十进制来表示（0~255.0~255.0~255.0~255）")]),_._v(" "),a("h4",{attrs:{id:"ip-地址有-5-种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-地址有-5-种"}},[_._v("#")]),_._v(" ip 地址有 5 种")]),_._v(" "),a("p",[_._v("IP 地址 分为两部分，前面一部分代表网络号，后面一部分代表主机号，但是网络部分和主机部分所占用的二级制位数是不固定的。")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("A 类：1.0.0.0~126.255.255.255 （前面 1 个字节是网络号）")])]),_._v(" "),a("li",[a("p",[_._v("B 类：128.0.0.0~191.255.255.255 （前面 2 个字节是网络号）")])]),_._v(" "),a("li",[a("p",[_._v("C 类：192.0.0.0~223.255.255.255 （前面 3 个字节是网络号）")])]),_._v(" "),a("li",[a("p",[_._v("D 类：224.0.0.0~239.255.255.255 用于组播")])]),_._v(" "),a("li",[a("p",[_._v("E 类：240.0.0.0~254.255.255.255 用于科研")])]),_._v(" "),a("li",[a("p",[_._v("127.0.0.0~127.255.255.255 用于环回测试")])])]),_._v(" "),a("h4",{attrs:{id:"子网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子网"}},[_._v("#")]),_._v(" 子网")]),_._v(" "),a("p",[_._v("主要是为了节省 ip 地址数量")]),_._v(" "),a("h4",{attrs:{id:"子网掩码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子网掩码"}},[_._v("#")]),_._v(" 子网掩码")]),_._v(" "),a("p",[_._v("子网掩码用于快计算出 ip 所处的子网")]),_._v(" "),a("p",[_._v("子网掩码和 IP 地址一样都是 32 位")]),_._v(" "),a("p",[_._v("子网掩码由连续的 1 和连续的 0 组成")]),_._v(" "),a("p",[_._v("某一个子网的子网掩码具备网络号位数个连续的 1，主机号位数用 0 补齐。")]),_._v(" "),a("ol",[a("li",[_._v("A 类地址的子网掩码 255.0.0.0")]),_._v(" "),a("li",[_._v("B 类地址的子网掩码 255.255.0.0")]),_._v(" "),a("li",[_._v("C 类地址的子网掩码 255.255.255.0")])]),_._v(" "),a("p",[_._v("知道了子网掩码，相当于我们知道了网络部分是几位，主机部分是几位，我们只需要把 IP 地址二进制与他的子网掩码二进制做一个 ( and ) 运算，然后转为十进制就行了。也就是说有了两台计算机的 IP 地址 和 子网掩码 ，我们就可以判断他们是否处在同一子网当中了。")]),_._v(" "),a("h3",{attrs:{id:"路由表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由表"}},[_._v("#")]),_._v(" 路由表")]),_._v(" "),a("table",[a("tr",[a("th",[_._v("目的IP地址")]),_._v(" "),a("th",[_._v("下一跳IP地址")])]),_._v(" "),a("tr",[a("td",[_._v("ip1")]),_._v(" "),a("td",[_._v("ip2")])])]),_._v(" "),a("p",[_._v("计算机或者路由器都拥有路由表")]),_._v(" "),a("h3",{attrs:{id:"ip-协议的转发流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-协议的转发流程"}},[_._v("#")]),_._v(" IP 协议的转发流程")]),_._v(" "),a("ol",[a("li",[_._v("A 发出目的地为 C 的 IP 数据报，查询路由表发现下一跳为 E")]),_._v(" "),a("li",[_._v("A 将数据报发送给 E")]),_._v(" "),a("li",[_._v("E 查询路由表表发现下一跳为 F，将数据报发送给 F")]),_._v(" "),a("li",[_._v("F 查询路由表发现目的地 C 直接连接，将数据报发送给 C")])]),_._v(" "),a("h3",{attrs:{id:"arp-地址转换协议-协议的工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arp-地址转换协议-协议的工作原理"}},[_._v("#")]),_._v(" ARP(地址转换协议) 协议的工作原理？")]),_._v(" "),a("p",[_._v("MAC 地址一般来讲是不会变的，设备在生产时就被“烙”上了 唯一的标识，这个 唯一的标识 就是 MAC 地址。")]),_._v(" "),a("p",[_._v("网络层的 ARP 协议完成了 IP 地址与 MAC 地址的映射。")]),_._v(" "),a("ol",[a("li",[_._v("首先，每台主机都会在自己的 ARP 缓冲区中建立一个 ARP 列表，以表示 IP 地址和 MAC 地址的对应关系。")]),_._v(" "),a("li",[_._v("当源主机需要将一个数据包要发送到目的主机时，会首先检查自己 ARP 列表中是否存在该 IP 地址对应的 MAC 地址。")]),_._v(" "),a("li",[_._v("如果有，就直接将数据包发送到这个 MAC 地址。")]),_._v(" "),a("li",[_._v("如果没有，就向本地网段发起一个 ARP 请求的广播包，查询此目的主机对应的 MAC 地址。此 ARP 请求数据包里包括源主机的 IP 地址、硬件地址、以及目的主机的 IP 地址。网络中所有的主机收到这个 ARP 请求后，会检查数据包中的目的 IP 是否和自己的 IP 地址一致。如果不相同就忽略此数据包；如果相同，该主机首先将发送端的 MAC 地址和 IP 地址添加到自己的 ARP 列表中，如果 ARP 表中已经存在该 IP 的信息，则将其覆盖，然后给源主机发送一个 ARP 响应数据包，告诉对方自己是它需要查找的 MAC 地址。")]),_._v(" "),a("li",[_._v("源主机收到这个 ARP 响应数据包后，将得到的目的主机的 IP 地址和 MAC 地址添加到自己的 ARP 列表中，并利用此信息开始数据的传输。")]),_._v(" "),a("li",[_._v("如果源主机一直没有收到 ARP 响应数据包，表示 ARP 查询失败。")])]),_._v(" "),a("p",[_._v("我们使用"),a("code",[_._v("arp -a")]),_._v("查看 arp 缓存列表")]),_._v(" "),a("h3",{attrs:{id:"rarp-逆地址解析协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rarp-逆地址解析协议"}},[_._v("#")]),_._v(" RARP(逆地址解析协议)")]),_._v(" "),a("p",[_._v("通过 MAC 地址找 IP 地址")]),_._v(" "),a("h3",{attrs:{id:"网络地址转换-nat-技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络地址转换-nat-技术"}},[_._v("#")]),_._v(" 网络地址转换 NAT 技术")]),_._v(" "),a("p",[_._v("NAT 技术用于多个主机通过一个公有 IP 访问互联网的公有网络，也就是公司局域网里面的计算机怎么访问外网。")]),_._v(" "),a("p",[_._v("NAT 减缓了 IP 地址的消耗，但是增加了网络通信的复杂度。")]),_._v(" "),a("p",[_._v("NAT 技术实际上就是进行 ip 地址和端口的替换")]),_._v(" "),a("h4",{attrs:{id:"举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[_._v("#")]),_._v(" 举例")]),_._v(" "),a("p",[_._v("假设有一台公网路由器 ip 为 173.21.59.10 路由器连接手机 ip 192.168.2.11 和电脑 ip192.168.2.10")]),_._v(" "),a("p",[_._v("假设手机请求外网 192.168.2.11:5000 到达路由器会变成 173.21.59.10:8989 路由器接收到请求结果后会把该端口的结果返回到 192.168.2.11:5000 这个地址。")]),_._v(" "),a("p",[_._v("假设电脑请求外网 192.168.2.10:6000 到达路由器会变成 173.21.59.10:9989 路由器接收到请求结果后会把该端口的结果返回到 192.168.2.10:6000 这个地址。")]),_._v(" "),a("h3",{attrs:{id:"icmp-协议-网际控制报文协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#icmp-协议-网际控制报文协议"}},[_._v("#")]),_._v(" ICMP 协议（网际控制报文协议）")]),_._v(" "),a("p",[_._v("ICMP 协议可以报告错误信合或者异常情况，辅助 IP 传输数据")]),_._v(" "),a("h2",{attrs:{id:"传输层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传输层"}},[_._v("#")]),_._v(" 传输层")]),_._v(" "),a("p",[_._v("主要包括 TCP 和 UDP")]),_._v(" "),a("h3",{attrs:{id:"套接字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#套接字"}},[_._v("#")]),_._v(" 套接字")]),_._v(" "),a("p",[_._v("我们使用端口来标记不同的网络进程")]),_._v(" "),a("p",[_._v("端口使用 16 比特为来表示端口（0~65535）")]),_._v(" "),a("p",[_._v("ip:port 就是套接字")]),_._v(" "),a("p",[_._v("套接字（Socket）是抽象概念，表示 TCP 连接的一端，通过套接字可以进行数据发送或接收。")]),_._v(" "),a("p",[_._v("TCP 连接由两个套接字组成 Socket1 <=> Socket2")]),_._v(" "),a("p",[_._v("应用层通过传输层进行数据通信时，TCP 会遇到同时为多个应用程序进程提供并发服务的问题。多个 TCP 连接或多个应用程序进程可能需要通过同一个 TCP 协议端口传输数据。为了区别不同的应用程序进程和连接，许多计算机操作系统为应用程序与 TCP／IP 协议交互提供了套接字(Socket)接口。应用层可以和传输层通过 Socket 接口，区分来自不同应用程序进程或网络连接的通信，实现数据传输的并发服务。")]),_._v(" "),a("h3",{attrs:{id:"多路复用与多路分解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多路复用与多路分解"}},[_._v("#")]),_._v(" 多路复用与多路分解")]),_._v(" "),a("p",[_._v("将传输层报文段中的数据交付到正确的套接字的工作被称为多路分解。")]),_._v(" "),a("p",[_._v("在源主机上从不同的套接字中收集数据，封装头信息生成报文段后，将报文段传递到网络层，这个过程被称为多路复用。")]),_._v(" "),a("p",[_._v("无连接的多路复用和多路分解指的是 UDP 套接字的分配过程，一个 UDP 套接字由一个二元组来标识，这个二元组包含了一个目的地址和一个目的端口号。因此不同源地址和端口号的 UDP 报文段到达主机后，如果它们拥有相同的目的地址和目的端口号，那么不同的报文段将会转交到同一个 UDP 套接字中。")]),_._v(" "),a("p",[_._v("面向连接的多路复用和多路分解指的是 TCP 套接字的分配过程，一个 TCP 套接字由一个四元组来标识，这个四元组包含了 源 IP 地址、源端口号、目的地址和目的端口号。因此，一个 TCP 报文段从网络中到达一台主机上时，该主机使用全部 4 个 值来将报文段定向到相应的套接字。")]),_._v(" "),a("h2",{attrs:{id:"应用层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[_._v("#")]),_._v(" 应用层")]),_._v(" "),a("p",[_._v("定义应用间通信的规则")]),_._v(" "),a("p",[_._v("主要有 Http 协议 Https 协议等")]),_._v(" "),a("h3",{attrs:{id:"dhcp-协议-动态主机设计协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dhcp-协议-动态主机设计协议"}},[_._v("#")]),_._v(" DHCP 协议（动态主机设计协议）")]),_._v(" "),a("p",[_._v("DHCP 是应用 UDP 协议的应用层协议，默认端口是 67 端口。")]),_._v(" "),a("p",[_._v("主要作用是动态分配 ip 地址。")]),_._v(" "),a("p",[_._v("平时我们的电脑使用自动获取 ip 地址就是使用了 DHCP 协议动态分配 ip。")])])}),[],!1,null,null,null);v.default=r.exports}}]);