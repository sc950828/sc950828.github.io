(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{424:function(t,a,s){"use strict";s.r(a);var e=s(44),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"使用-svg-图片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-svg-图片"}},[t._v("#")]),t._v(" 使用 svg 图片")]),t._v(" "),s("ol",[s("li",[t._v("矢量图形不失帧")]),t._v(" "),s("li",[t._v("可以直接通过 css 修改样式")]),t._v(" "),s("li",[t._v("xml 语法，有利于搜索引擎 SEO 和无障碍读屏软件读取")])]),t._v(" "),s("h2",{attrs:{id:"使用-flex-布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-flex-布局"}},[t._v("#")]),t._v(" 使用 flex 布局")]),t._v(" "),s("p",[t._v("flex 布局有更好的性能")]),t._v(" "),s("h2",{attrs:{id:"优化资源加载顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化资源加载顺序"}},[t._v("#")]),t._v(" 优化资源加载顺序")]),t._v(" "),s("p",[t._v("浏览器默认安排资源加载的优先级")]),t._v(" "),s("p",[t._v("我们可以使用 preload prefetch 调整资源的优先级")]),t._v(" "),s("p",[t._v("preload 提前加载较晚出现，但是对当前页面非常重要的资源。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("img/one.jpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("prefetch 在空闲的时候提前加载后面可能会用到的资源。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("img/one.jpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("在 webpack 中配置 prefetch preload")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们只需要在异步动态加载的前面添加注释 webpackPrefetch或webpackPreload 即可")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPrefetch: true */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ChartingLibrary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPreload: true */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ChartingLibrary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"js-异步加载-async-defer-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-异步加载-async-defer-区别"}},[t._v("#")]),t._v(" js 异步加载 async defer 区别？")]),t._v(" "),s("p",[t._v("默认情况下，脚本的下载和执行将会按照文档的先后顺序同步进行。当脚本下载和执行的时候，文档解析就会被阻塞，在脚本下载和执行完成之后文档才能往下继续进行解析。但是通过加上 async 或 difer 标签就能实现异步加载。下面是 async 和 defer 两者区别：")]),t._v(" "),s("ul",[s("li",[t._v("当 script 中有 defer 属性时，脚本的加载过程和文档加载是异步发生的，等到文档解析完(DOMContentLoaded 事件发生前)脚本才开始执行。多个脚本按顺序执行。")]),t._v(" "),s("li",[t._v("当 script 有 async 属性时，脚本的加载过程和文档加载也是异步发生的。但脚本下载完成后会停止 HTML 解析，执行脚本，脚本解析完继续 HTML 解析。多个脚本的执行顺序无法保证。")]),t._v(" "),s("li",[t._v("当 script 同时有 async 和 defer 属性时，执行效果和 async 一致。")])]),t._v(" "),s("h2",{attrs:{id:"预渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预渲染"}},[t._v("#")]),t._v(" 预渲染")]),t._v(" "),s("p",[t._v("预渲染，在构建的时候把首页渲染出来。大大提高了首屏渲染时间。")]),t._v(" "),s("p",[t._v("可以使用"),s("a",{attrs:{href:"https://github.com/stereobooster/react-snap",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-snap"),s("OutboundLink")],1),t._v("预渲染插件，该插件支持 react 和 vue")]),t._v(" "),s("h2",{attrs:{id:"windowing-窗口化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windowing-窗口化"}},[t._v("#")]),t._v(" windowing 窗口化")]),t._v(" "),s("p",[t._v("窗口化，只渲染窗口里能见的元素，提升大列表渲染性能。")]),t._v(" "),s("p",[t._v("顶部不可见的元素动态删除，底部将要出现的元素动态创建，可视窗口里面元素基本固定数量，性能更好。")]),t._v(" "),s("p",[t._v("可以使用"),s("a",{attrs:{href:"https://github.com/bvaughn/react-window",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-window"),s("OutboundLink")],1),t._v("窗口化插件")]),t._v(" "),s("h2",{attrs:{id:"骨架屏-skeleton"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#骨架屏-skeleton"}},[t._v("#")]),t._v(" 骨架屏 skeleton")]),t._v(" "),s("p",[t._v("在页面未渲染的时候显示粗略骨架图，用户体验更好")]),t._v(" "),s("p",[t._v("可以使用"),s("a",{attrs:{href:"https://github.com/buildo/react-placeholder",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-placeholder"),s("OutboundLink")],1),t._v("骨架屏插件")]),t._v(" "),s("h2",{attrs:{id:"首屏优化方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首屏优化方案"}},[t._v("#")]),t._v(" 首屏优化方案")]),t._v(" "),s("h3",{attrs:{id:"资源体积太大"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源体积太大"}},[t._v("#")]),t._v(" 资源体积太大")]),t._v(" "),s("p",[t._v("资源压缩，传输压缩(Gzip)，代码拆分，tree shaking，http2，缓存")]),t._v(" "),s("h3",{attrs:{id:"首页内容太多"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首页内容太多"}},[t._v("#")]),t._v(" 首页内容太多")]),t._v(" "),s("p",[t._v("组件的懒加载，预渲染，服务端渲染，首屏行内 css")]),t._v(" "),s("h3",{attrs:{id:"加载顺序不合适"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载顺序不合适"}},[t._v("#")]),t._v(" 加载顺序不合适")]),t._v(" "),s("p",[t._v("使用 prefetch、preload 改变资源加载的顺序")])])}),[],!1,null,null,null);a.default=r.exports}}]);