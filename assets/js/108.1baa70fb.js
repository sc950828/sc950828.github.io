(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{464:function(t,s,a){"use strict";a.r(s);var e=a(44),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域"}},[t._v("#")]),t._v(" 什么是跨域")]),t._v(" "),a("ul",[a("li",[t._v("对于同源，只要 URI 中协议名、主机名(域名)、端口三者有其中一条不同，则视为不同源。不同源之间请求资源，则为跨域。")]),t._v(" "),a("li",[t._v("同源政策的目的主要是为了保证用户的信息安全，它只是对 js 脚本的一种限制，并不是对浏览器的限制，对于一般的 img、或者 script 脚本请求都不会有跨域的限制，这是因为这些操作都不会通过响应结果来进行可能出现安全问题的操作。")])]),t._v(" "),a("h2",{attrs:{id:"跨域的限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域的限制"}},[t._v("#")]),t._v(" 跨域的限制")]),t._v(" "),a("ul",[a("li",[t._v("当前域下的 js 脚本不能够访问其他域下的 cookie、localStorage 和 indexDB。")]),t._v(" "),a("li",[t._v("是当前域下的 js 脚本不能够操作访问操作其他域下的 DOM。")]),t._v(" "),a("li",[t._v("当前域下 ajax 无法发送跨域请求。")])]),t._v(" "),a("h2",{attrs:{id:"怎么解决跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决跨域"}},[t._v("#")]),t._v(" 怎么解决跨域")]),t._v(" "),a("ul",[a("li",[t._v("解决跨域问题可以有两个方向，第一是绕开浏览器限制，第二是通过浏览器支持的方式来允许跨域。\n"),a("ul",[a("li",[t._v("绕开浏览器限制\n"),a("ul",[a("li",[t._v("开发环境下使用 webpack-dev-server 配置 proxy")]),t._v(" "),a("li",[t._v("生产环境下使用 nginx 配置 proxy_pass 反向代理")])])]),t._v(" "),a("li",[t._v("通过浏览器支持的方式来允许跨域\n"),a("ul",[a("li",[t._v("cors 跨域资源共享")])])])])])]),t._v(" "),a("h2",{attrs:{id:"解决跨域方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域方法"}},[t._v("#")]),t._v(" 解决跨域方法")]),t._v(" "),a("h3",{attrs:{id:"cors-跨域资源共享-解决跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors-跨域资源共享-解决跨域"}},[t._v("#")]),t._v(" cors 跨域资源共享 解决跨域")]),t._v(" "),a("p",[t._v("这种跨域解决方案只需要服务端的设置，分简单请求和非简单请求。")]),t._v(" "),a("p",[t._v("简单请求")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("（1） 请求方法是以下三种方法之一：\n  HEAD\n  GET\n  POST\n（2）HTTP的头信息不超出以下几种字段：\n  Accept\n  Accept-Language\n  Content-Language\n  Last-Event-ID\n  Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain\n")])])]),a("p",[t._v("不满足简单请求的就是非简单请求")]),t._v(" "),a("p",[t._v("简单请求")]),t._v(" "),a("ul",[a("li",[t._v("浏览器检测到请求是 CORS 请求, 添加一个 origin 字段(其中包含页面源信息: 协议、域名、端口) ====> 服务端收到后作相应的处理(对比 origin 和 Access-Control-Allow-Origin, 服务端判断这个源是否接受)返回结果给浏览器 ====> 浏览器检查响应头是否允许跨域信息 ====> 允许, 那就当做没事发生。 不允许, 浏览器抛出相应的错误信息。")])]),t._v(" "),a("p",[t._v("非简单请求")]),t._v(" "),a("ul",[a("li",[t._v("复杂请求在发生请求时, 如果是 CORS 请求，浏览器预先发送一个 option 请求。浏览器这种行为被称之为预检请求。")]),t._v(" "),a("li",[t._v("预检请求的方法是 OPTIONS，同时会加上 Origin 源地址和 Host 目标地址，这很简单。同时也会加上两个关键的字段:Access-Control-Request-Method, 列出 CORS 请求用到哪个 HTTP 方法 Access-Control-Request-Headers，指定 CORS 请求将要加上什么请求头。")]),t._v(" "),a("li",[t._v("服务器 response 需要设置 Access-Control-Allow-Origin 字段，该字段是必须的，值为"),a("code",[t._v("*")]),t._v("或者具体的域名")]),t._v(" "),a("li",[t._v("服务器 response 需要设置 Access-Control-Allow-Headers:该字段必须，表明服务器支持的所有头信息字段")]),t._v(" "),a("li",[t._v("服务器 response 需要设置 Access-Control-Allow-Methods 该字段必须，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法")]),t._v(" "),a("li",[t._v("Access-Control-Max-Age 该字段可选，用来指定本次预检请求的有效期。")])]),t._v(" "),a("p",[t._v("注意不管简单请求还是非简单请求")]),t._v(" "),a("ul",[a("li",[t._v("服务器 response 可以设置 Access-Control-Allow-Credentials:该字段可选，其值类型是布尔型，表示是否允许发送 Cookie。默认情况下 Cookie 不包括在 CORS 请求中。当设为 true 时表示服务器明确许可，Cookie 可以包含在请求中一起发送给服务器。")]),t._v(" "),a("li",[t._v("如果服务器设置了 Access-Control-Allow-Credentials 客户端请求需要设置 withCredentials = true，并且 Access-Control-Allow-Origin 的值必须是明确的域名不能是"),a("code",[t._v("*")])])]),t._v(" "),a("h3",{attrs:{id:"jsonp-解决跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-解决跨域"}},[t._v("#")]),t._v(" jsonp 解决跨域")]),t._v(" "),a("ul",[a("li",[t._v("核心是利用 script 标签不会跨域来触发回调函数来获取后端数据。")]),t._v(" "),a("li",[t._v("优点 兼容性好")]),t._v(" "),a("li",[t._v("缺点 JSONP 只支持 GET 请求")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事先写好需要数据的方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dosomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理获得的数据")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传方法名到后台")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://example.com/data.php?callback=dosomething"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("// 返回方法名并携带数据\n"),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'callback'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//得到回调函数名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//要返回的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'('")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json_encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);