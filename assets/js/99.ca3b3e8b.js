(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{455:function(v,_,a){"use strict";a.r(_);var t=a(44),s=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"计算机的组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机的组成"}},[v._v("#")]),v._v(" 计算机的组成")]),v._v(" "),a("p",[v._v("计算机最基本的 5 大组成部分分别为：输入设备(比如键盘), 存储器(比如内存), 运算器(cpu), 控制器(cpu), 输出设备(显示器)。")]),v._v(" "),a("h2",{attrs:{id:"计算机总线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机总线"}},[v._v("#")]),v._v(" 计算机总线")]),v._v(" "),a("h3",{attrs:{id:"什么是计算机总线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是计算机总线"}},[v._v("#")]),v._v(" 什么是计算机总线")]),v._v(" "),a("p",[v._v("计算机总线就是解决不同设备之间的通信问题")]),v._v(" "),a("ol",[a("li",[v._v("提供了对外连接的接口")]),v._v(" "),a("li",[v._v("不同设备可以通过 USB 接口进行连接")]),v._v(" "),a("li",[v._v("连接的标准，促使外围设备接口的统一")])]),v._v(" "),a("h3",{attrs:{id:"总线的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总线的分类"}},[v._v("#")]),v._v(" 总线的分类")]),v._v(" "),a("h4",{attrs:{id:"片内总线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#片内总线"}},[v._v("#")]),v._v(" 片内总线")]),v._v(" "),a("p",[v._v("高集成度芯片内部的信息传输线")]),v._v(" "),a("ol",[a("li",[v._v("芯片内部的总线")]),v._v(" "),a("li",[v._v("寄存器与寄存器之间")]),v._v(" "),a("li",[v._v("寄存器与控制器、运算器之间")])]),v._v(" "),a("h4",{attrs:{id:"系统总线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统总线"}},[v._v("#")]),v._v(" 系统总线")]),v._v(" "),a("p",[v._v("CPU、主内存、IO 设备、各组件之间的信息传输线")]),v._v(" "),a("ol",[a("li",[v._v("数据总线")]),v._v(" "),a("li",[v._v("地址总线")]),v._v(" "),a("li",[v._v("控制总线")])]),v._v(" "),a("h2",{attrs:{id:"计算机仲裁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机仲裁"}},[v._v("#")]),v._v(" 计算机仲裁")]),v._v(" "),a("h3",{attrs:{id:"为什么需要计算机仲裁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要计算机仲裁"}},[v._v("#")]),v._v(" 为什么需要计算机仲裁")]),v._v(" "),a("p",[v._v("解决总线使用权的冲突问题")]),v._v(" "),a("h3",{attrs:{id:"总线仲裁方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总线仲裁方法"}},[v._v("#")]),v._v(" 总线仲裁方法")]),v._v(" "),a("h4",{attrs:{id:"链式查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链式查询"}},[v._v("#")]),v._v(" 链式查询")]),v._v(" "),a("p",[v._v("好处：电路复杂度低 仲裁方式简单")]),v._v(" "),a("p",[v._v("坏处：优先级低的设备难以获得总线使用权")]),v._v(" "),a("h4",{attrs:{id:"计时器定时查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计时器定时查询"}},[v._v("#")]),v._v(" 计时器定时查询")]),v._v(" "),a("p",[v._v("仲裁控制器对设备编号并使用计数器累计计数")]),v._v(" "),a("p",[v._v("接收到仲裁信号后，往所有设备发出计数值")]),v._v(" "),a("p",[v._v("计数值与设备编号一致则获得总线使用权")]),v._v(" "),a("h4",{attrs:{id:"独立请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#独立请求"}},[v._v("#")]),v._v(" 独立请求")]),v._v(" "),a("p",[v._v("每个设备均有总线独立连接仲裁器")]),v._v(" "),a("p",[v._v("设备可独立向仲裁器发送请求和接收请求")]),v._v(" "),a("p",[v._v("当同事收到多个请求信号，仲裁器有券按优先级分配使用权")]),v._v(" "),a("p",[v._v("好处： 响应速度快，优先顺序可动态改变")]),v._v(" "),a("p",[v._v("坏处： 设备连线多，总线控制复杂")]),v._v(" "),a("h2",{attrs:{id:"输入输出设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入输出设备"}},[v._v("#")]),v._v(" 输入输出设备")]),v._v(" "),a("h3",{attrs:{id:"常见输入设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见输入设备"}},[v._v("#")]),v._v(" 常见输入设备")]),v._v(" "),a("p",[v._v("键盘 鼠标 数位板 扫描仪")]),v._v(" "),a("h3",{attrs:{id:"常见输出设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见输出设备"}},[v._v("#")]),v._v(" 常见输出设备")]),v._v(" "),a("p",[v._v("显示器 打印机 投影仪")]),v._v(" "),a("h2",{attrs:{id:"cpu-与-io-设备的通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-与-io-设备的通信"}},[v._v("#")]),v._v(" CPU 与 IO 设备的通信")]),v._v(" "),a("h3",{attrs:{id:"程序中断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序中断"}},[v._v("#")]),v._v(" 程序中断")]),v._v(" "),a("p",[v._v("当外围 IO 设备就绪时，向 CPU 发出中断信号")]),v._v(" "),a("p",[v._v("CPU 有专门的电路响应中断信号")]),v._v(" "),a("h3",{attrs:{id:"dma-直接存储器访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dma-直接存储器访问"}},[v._v("#")]),v._v(" DMA（直接存储器访问）")]),v._v(" "),a("p",[v._v("DMA 直接连接主存与 IO 设备")]),v._v(" "),a("p",[v._v("DMA 工作时不需要 CPU 的参与")]),v._v(" "),a("h2",{attrs:{id:"计算机存储器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机存储器"}},[v._v("#")]),v._v(" 计算机存储器")]),v._v(" "),a("h3",{attrs:{id:"存储器分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储器分类"}},[v._v("#")]),v._v(" 存储器分类")]),v._v(" "),a("h4",{attrs:{id:"按存储介质分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按存储介质分类"}},[v._v("#")]),v._v(" 按存储介质分类")]),v._v(" "),a("ol",[a("li",[v._v("半导体存储器 有内存条、U 盘、固态硬盘")]),v._v(" "),a("li",[v._v("磁存储器 有磁带、磁盘")])]),v._v(" "),a("h4",{attrs:{id:"按存取方式分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按存取方式分类"}},[v._v("#")]),v._v(" 按存取方式分类")]),v._v(" "),a("ol",[a("li",[v._v("随机存储器（RAM） 随机读取 与位置无关。能读能写。")]),v._v(" "),a("li",[v._v("串行存储器 与位置有关 按顺序查找")]),v._v(" "),a("li",[v._v("只读存储器（ROM）只读不写")])]),v._v(" "),a("h3",{attrs:{id:"存储器的层次结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储器的层次结构"}},[v._v("#")]),v._v(" 存储器的层次结构")]),v._v(" "),a("ol",[a("li",[v._v("缓存。 高速缓存，在 CPU 和主存之间。")]),v._v(" "),a("li",[v._v("主存。 内存条。")]),v._v(" "),a("li",[v._v("辅存。 磁盘、U 盘。")])]),v._v(" "),a("h3",{attrs:{id:"高速缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高速缓存"}},[v._v("#")]),v._v(" 高速缓存")]),v._v(" "),a("p",[v._v("主要是解决 CPU 与主存速度不匹配问题")]),v._v(" "),a("h4",{attrs:{id:"高速缓存替换策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高速缓存替换策略"}},[v._v("#")]),v._v(" 高速缓存替换策略")]),v._v(" "),a("p",[v._v("当高速缓存没有 CPU 需要的数据的时候，高速缓存就需要去主存里面拿数据，这里就涉及到高速缓存的替换策略。")]),v._v(" "),a("ol",[a("li",[v._v("随机算法")]),v._v(" "),a("li",[v._v("先进先出算法（FIFO）")]),v._v(" "),a("li",[v._v("最不经常使用算法（LFU）")]),v._v(" "),a("li",[v._v("最近最少使用算法（LRU）")])]),v._v(" "),a("h3",{attrs:{id:"主存储器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主存储器"}},[v._v("#")]),v._v(" 主存储器")]),v._v(" "),a("p",[v._v("也就是主存，内存条。")]),v._v(" "),a("ol",[a("li",[v._v("主存 是随机存储器（RAM）")]),v._v(" "),a("li",[v._v("RAM 通过电容存储数据，必须隔一段时间刷新一次")]),v._v(" "),a("li",[v._v("如果掉电，name 一段时间后将丢失所有数据")])]),v._v(" "),a("h3",{attrs:{id:"辅助存储器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#辅助存储器"}},[v._v("#")]),v._v(" 辅助存储器")]),v._v(" "),a("p",[v._v("也就是辅存，磁盘。")]),v._v(" "),a("h2",{attrs:{id:"计算机指令系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机指令系统"}},[v._v("#")]),v._v(" 计算机指令系统")]),v._v(" "),a("h3",{attrs:{id:"机器指令的形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#机器指令的形式"}},[v._v("#")]),v._v(" 机器指令的形式")]),v._v(" "),a("p",[v._v("主要由两部分组成：操作码字段、地址码字段")]),v._v(" "),a("p",[v._v("操作码字段")]),v._v(" "),a("ol",[a("li",[v._v("操作码指明指令所要完成的操作")]),v._v(" "),a("li",[v._v("操作码的位数反应了机器的操作种类")])]),v._v(" "),a("p",[v._v("地址码字段")]),v._v(" "),a("ol",[a("li",[v._v("地址码直接给出操作数或者操作数的地址")]),v._v(" "),a("li",[v._v("分为三地址指令、二地址指令、一地址指令、无地址指令")])]),v._v(" "),a("h3",{attrs:{id:"机器指令的操作类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#机器指令的操作类型"}},[v._v("#")]),v._v(" 机器指令的操作类型")]),v._v(" "),a("ol",[a("li",[v._v("数据传输（数据读写、寄存器之间数据传输等等）")]),v._v(" "),a("li",[v._v("算术逻辑操作（加减乘除等算术）")]),v._v(" "),a("li",[v._v("移位操作（数据左移、数据右移）")]),v._v(" "),a("li",[v._v("控制指令（等待指令、停机指令、空操作指令、中断指令）")])]),v._v(" "),a("h3",{attrs:{id:"机器指令的寻址方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#机器指令的寻址方式"}},[v._v("#")]),v._v(" 机器指令的寻址方式")]),v._v(" "),a("h4",{attrs:{id:"指令寻址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令寻址"}},[v._v("#")]),v._v(" 指令寻址")]),v._v(" "),a("ol",[a("li",[v._v("顺序寻址")]),v._v(" "),a("li",[v._v("跳跃寻址")])]),v._v(" "),a("h4",{attrs:{id:"数据寻址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据寻址"}},[v._v("#")]),v._v(" 数据寻址")]),v._v(" "),a("ol",[a("li",[v._v("立即寻址（操作数直接在地址码字段）")]),v._v(" "),a("li",[v._v("直接寻址（操作数的地址在地址码字段）")]),v._v(" "),a("li",[v._v("间接寻址（地址码给出的是操作数地址的地址）")])]),v._v(" "),a("h2",{attrs:{id:"控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[v._v("#")]),v._v(" 控制器")]),v._v(" "),a("p",[v._v("控制器是协调和控制计算机运行的")]),v._v(" "),a("p",[v._v("主要包括")]),v._v(" "),a("ol",[a("li",[v._v("程序计数器（存储下一条指令地址）")]),v._v(" "),a("li",[v._v("时序发生器（发送时序脉冲）")]),v._v(" "),a("li",[v._v("指令译码器（控制器的主要部件之一）")]),v._v(" "),a("li",[v._v("各种寄存器")]),v._v(" "),a("li",[v._v("总线")])]),v._v(" "),a("h2",{attrs:{id:"运算器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算器"}},[v._v("#")]),v._v(" 运算器")]),v._v(" "),a("p",[v._v("运算器是用来进行数据运算加工的")]),v._v(" "),a("p",[v._v("主要包括")]),v._v(" "),a("ol",[a("li",[v._v("数据缓冲器（输入输出缓冲）")]),v._v(" "),a("li",[v._v("ALU（算术逻辑单元，运算器的主要组成）")]),v._v(" "),a("li",[v._v("通用寄存器（存放或传送数据和指令、可保存 ALU 的运算中间结果、容量比一般专用寄存器要大）")]),v._v(" "),a("li",[v._v("状态字寄存器（存放运算状态、存放运算控制信息）")]),v._v(" "),a("li",[v._v("总线")])])])}),[],!1,null,null,null);_.default=s.exports}}]);