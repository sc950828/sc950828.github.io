(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{407:function(t,a,s){"use strict";s.r(a);var e=s(44),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"代码检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码检查"}},[t._v("#")]),t._v(" 代码检查")]),t._v(" "),s("p",[t._v("vue2 采用 flow 进行静态类型检查工具，而 vue3 使用 typescript 作为代码检查工具。")]),t._v(" "),s("h2",{attrs:{id:"语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语言"}},[t._v("#")]),t._v(" 语言")]),t._v(" "),s("p",[t._v("vue2 使用 js 编写，vue3 使用 ts 编写")]),t._v(" "),s("h2",{attrs:{id:"响应式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式"}},[t._v("#")]),t._v(" 响应式")]),t._v(" "),s("p",[t._v("vue2 使用 Object.defineProperty 方法，vue3 使用 proxy 方法。")]),t._v(" "),s("h3",{attrs:{id:"vue2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue2"}},[t._v("#")]),t._v(" vue2")]),t._v(" "),s("ol",[s("li",[t._v("Object.defineProperty()这个 api 无法原生的对数组进行响应式监听")]),t._v(" "),s("li",[t._v("实现过程中对于深度嵌套的数据，递归消耗大量性能")]),t._v(" "),s("li",[t._v("我们注意到，Object.defineProperty()这种实现，以及数组的实现，都存在一个问题，那就是没办法监听到后续的手动新增删除属性元素，比如数组，直接通过索引去设置和改变值是不会触发视图更新的，当然 vue 为我们提供了 vue.set 和 vue.delete 这样的 api，但终究是不方便的")])]),t._v(" "),s("h3",{attrs:{id:"vue3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3"}},[t._v("#")]),t._v(" vue3")]),t._v(" "),s("ol",[s("li",[t._v("Proxy 支持监听原生数组")]),t._v(" "),s("li",[t._v("Proxy 的获取数据，只会递归到需要获取的层级，不会继续递归")]),t._v(" "),s("li",[t._v("Proxy 可以监听数据的手动新增和删除")])]),t._v(" "),s("h2",{attrs:{id:"composition-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#composition-api"}},[t._v("#")]),t._v(" composition API")]),t._v(" "),s("p",[t._v("vue3 的 composition API 可以使相同模块写在一起，不像 vue2 一样分开的很散。将零散分布的逻辑组合在一起来维护，并且还可以将单独的功能逻辑拆分成单独的文件。")]),t._v(" "),s("h2",{attrs:{id:"全局-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局-api"}},[t._v("#")]),t._v(" 全局 API")]),t._v(" "),s("p",[t._v("在 Vue3 中，全局和内部 API 都经过了重构，并考虑到了 tree-shaking 的支持。因此，全局 API 现在只能作为 ES 模块构建的命名导出进行访问。")]),t._v(" "),s("p",[t._v("vue2")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("vue3")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" nextTick "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些和DOM有关的东西")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"生命周期不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期不同"}},[t._v("#")]),t._v(" 生命周期不同")]),t._v(" "),s("p",[t._v("vue3 中生命周期需要自己引入，而且新增了两个生命周期方法 onRenderTriggered 和 onRenderTricked")])])}),[],!1,null,null,null);a.default=n.exports}}]);